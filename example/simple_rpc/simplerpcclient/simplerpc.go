// Code generated by goctl. DO NOT EDIT.
// Source: simple_rpc.proto

package simplerpcclient

import (
	"context"

	"github.com/reatang/go-zero-grpc-gateway/example/simple_rpc/pb/simple_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = simple_rpc.Request
	Response = simple_rpc.Response

	SimpleRpc interface {
		// Ping 测试
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultSimpleRpc struct {
		cli zrpc.Client
	}
)

func NewSimpleRpc(cli zrpc.Client) SimpleRpc {
	return &defaultSimpleRpc{
		cli: cli,
	}
}

// Ping 测试
func (m *defaultSimpleRpc) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := simple_rpc.NewSimpleRpcClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
